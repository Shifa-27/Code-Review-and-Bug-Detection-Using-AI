{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shifa\\\\Downloads\\\\Shifa Final\\\\Shifa Final\\\\Shifa\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is authenticated on component mount\n    const checkAuth = () => {\n      const storedAuth = localStorage.getItem('isAuthenticated');\n      const storedUser = localStorage.getItem('user');\n      if (storedAuth === 'true') {\n        setIsAuthenticated(true);\n        if (storedUser) {\n          setUser(JSON.parse(storedUser));\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = userData => {\n    localStorage.setItem('isAuthenticated', 'true');\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkAuth","storedAuth","localStorage","getItem","storedUser","JSON","parse","login","userData","setItem","stringify","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shifa/Downloads/Shifa Final/Shifa Final/Shifa/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is authenticated on component mount\n    const checkAuth = () => {\n      const storedAuth = localStorage.getItem('isAuthenticated');\n      const storedUser = localStorage.getItem('user');\n      \n      if (storedAuth === 'true') {\n        setIsAuthenticated(true);\n        if (storedUser) {\n          setUser(JSON.parse(storedUser));\n        }\n      }\n      \n      setLoading(false);\n    };\n    \n    checkAuth();\n  }, []);\n\n  const login = (userData) => {\n    localStorage.setItem('isAuthenticated', 'true');\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    logout\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;MAC1D,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAE/C,IAAIF,UAAU,KAAK,MAAM,EAAE;QACzBN,kBAAkB,CAAC,IAAI,CAAC;QACxB,IAAIS,UAAU,EAAE;UACdP,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;QACjC;MACF;MAEAL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAIC,QAAQ,IAAK;IAC1BN,YAAY,CAACO,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;IAC/CP,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtDb,kBAAkB,CAAC,IAAI,CAAC;IACxBE,OAAO,CAACW,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBT,YAAY,CAACU,UAAU,CAAC,iBAAiB,CAAC;IAC1CV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BjB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMgB,KAAK,GAAG;IACZnB,eAAe;IACfE,IAAI;IACJE,OAAO;IACPS,KAAK;IACLI;EACF,CAAC;EAED,oBAAOxB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAAEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACzB,GAAA,CA/CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}